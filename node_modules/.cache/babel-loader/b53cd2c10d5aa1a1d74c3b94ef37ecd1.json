{"ast":null,"code":"const {\n  MongoClient\n} = require(\"mongodb\"); // const USER = \"gst-app\";\n// const PASSWORD = \"twwlLQqN2R9arQZA\";\n\n\nconst DB_NAME = \"gst-web-app\"; // const uri = \"mongodb+srv://gst-app:twwlLQqN2R9arQZA@gst-app.abjqw.mongodb.net/gst-web-app?retryWrites=true&w=majority\";\n\nconst MONGO_URI = \"mongodb+srv://gst-app:twwlLQqN2R9arQZA@gst-app.abjqw.mongodb.net/gst-web-app?retryWrites=true&w=majority\"; // prettier-ignore\n\nclass MongoLib {\n  constructor() {\n    this.client = new MongoClient(MONGO_URI, {\n      useNewUrlParser: true\n    });\n    this.dbName = DB_NAME;\n  }\n\n  connect() {\n    return new Promise((resolve, reject) => {\n      this.client.connect(error => {\n        if (error) {\n          reject(error);\n        }\n\n        console.log(\"Connected succesfully to mongo\");\n        resolve(this.client.db(this.dbName));\n      });\n    });\n  } // getAll(collection, query) {\n  //     return this.connect().then(db => {\n  //         return db\n  //             .collection(collection)\n  //             .find(query)\n  //             .toArray();\n  //     });\n  // }\n\n\n  getAll() {\n    return this.connect().then(db => {\n      return db.collection(\"areas\").find({}).toArray();\n    });\n  }\n\n  test() {\n    console.log(\"insode NomgoLib\");\n    return \"al menos esto sirve\";\n  }\n\n}\n\nmodule.exports = MongoLib;","map":{"version":3,"sources":["C:/Users/coffe/Documents/GitHub/GST_appweb/src/MongoLib.js"],"names":["MongoClient","require","DB_NAME","MONGO_URI","MongoLib","constructor","client","useNewUrlParser","dbName","connect","Promise","resolve","reject","error","console","log","db","getAll","then","collection","find","toArray","test","module","exports"],"mappings":"AACA,MAAM;AAAEA,EAAAA;AAAF,IAAkBC,OAAO,CAAC,SAAD,CAA/B,C,CAEA;AACA;;;AACA,MAAMC,OAAO,GAAG,aAAhB,C,CACA;;AAEA,MAAMC,SAAS,GAAG,0GAAlB,C,CAA8H;;AAE9H,MAAMC,QAAN,CAAe;AACXC,EAAAA,WAAW,GAAG;AACV,SAAKC,MAAL,GAAc,IAAIN,WAAJ,CAAgBG,SAAhB,EAA2B;AAAEI,MAAAA,eAAe,EAAE;AAAnB,KAA3B,CAAd;AACA,SAAKC,MAAL,GAAcN,OAAd;AACH;;AAEDO,EAAAA,OAAO,GAAG;AACN,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,WAAKN,MAAL,CAAYG,OAAZ,CAAoBI,KAAK,IAAI;AACzB,YAAIA,KAAJ,EAAW;AACPD,UAAAA,MAAM,CAACC,KAAD,CAAN;AACH;;AAEDC,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACAJ,QAAAA,OAAO,CAAC,KAAKL,MAAL,CAAYU,EAAZ,CAAe,KAAKR,MAApB,CAAD,CAAP;AACH,OAPD;AAQH,KATM,CAAP;AAUH,GAjBU,CAmBX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAS,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKR,OAAL,GAAeS,IAAf,CAAoBF,EAAE,IAAI;AAC7B,aAAOA,EAAE,CACJG,UADE,CACS,OADT,EAEFC,IAFE,CAEG,EAFH,EAGFC,OAHE,EAAP;AAIH,KALM,CAAP;AAMH;;AAEDC,EAAAA,IAAI,GAAG;AACHR,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,WAAO,qBAAP;AACH;;AAvCU;;AA0CfQ,MAAM,CAACC,OAAP,GAAiBpB,QAAjB","sourcesContent":["\r\nconst { MongoClient } = require(\"mongodb\");\r\n\r\n// const USER = \"gst-app\";\r\n// const PASSWORD = \"twwlLQqN2R9arQZA\";\r\nconst DB_NAME = \"gst-web-app\";\r\n// const uri = \"mongodb+srv://gst-app:twwlLQqN2R9arQZA@gst-app.abjqw.mongodb.net/gst-web-app?retryWrites=true&w=majority\";\r\n\r\nconst MONGO_URI = \"mongodb+srv://gst-app:twwlLQqN2R9arQZA@gst-app.abjqw.mongodb.net/gst-web-app?retryWrites=true&w=majority\"; // prettier-ignore\r\n\r\nclass MongoLib {\r\n    constructor() {\r\n        this.client = new MongoClient(MONGO_URI, { useNewUrlParser: true });\r\n        this.dbName = DB_NAME;\r\n    }\r\n\r\n    connect() {\r\n        return new Promise((resolve, reject) => {\r\n            this.client.connect(error => {\r\n                if (error) {\r\n                    reject(error);\r\n                }\r\n\r\n                console.log(\"Connected succesfully to mongo\");\r\n                resolve(this.client.db(this.dbName));\r\n            });\r\n        });\r\n    }\r\n\r\n    // getAll(collection, query) {\r\n    //     return this.connect().then(db => {\r\n    //         return db\r\n    //             .collection(collection)\r\n    //             .find(query)\r\n    //             .toArray();\r\n    //     });\r\n    // }\r\n    getAll() {\r\n        return this.connect().then(db => {\r\n            return db\r\n                .collection(\"areas\")\r\n                .find({})\r\n                .toArray();\r\n        });\r\n    }\r\n\r\n    test() {\r\n        console.log(\"insode NomgoLib\")\r\n        return \"al menos esto sirve\";\r\n    }\r\n}\r\n\r\nmodule.exports = MongoLib;"]},"metadata":{},"sourceType":"module"}