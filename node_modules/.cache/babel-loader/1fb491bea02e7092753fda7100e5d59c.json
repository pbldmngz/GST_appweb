{"ast":null,"code":"const {\n  MongoClient\n} = require(\"mongodb\");\n\nconst {\n  config\n} = require(\"../config\");\n\nconst USER = encodeURIComponent(config.dbUser);\nconst PASSWORD = encodeURIComponent(config.dbPassword);\nconst DB_NAME = config.dbName;\nconst MONGO_URI = `mongodb://${USER}:${PASSWORD}@${config.dbHost}:${config.dbPort}/?authSource=${DB_NAME}`; // prettier-ignore\n\nclass MongoLib {\n  constructor() {\n    this.client = new MongoClient(MONGO_URI, {\n      useNewUrlParser: true\n    });\n    this.dbName = DB_NAME;\n  }\n\n  connect() {\n    return newPromise((resolve, reject) => {\n      this.client.connect(error => {\n        if (error) {\n          reject(error);\n        }\n\n        console.log(\"Connected succesfully to mongo\");\n        resolve(this.client.db(this.dbName));\n      });\n    });\n  }\n\n  getAll(collection, query) {\n    return this.connect().then(db => {\n      return db.collection(collection).find(query).toArray();\n    });\n  }\n\n}\n\nmodule.exports = MongoLib;","map":{"version":3,"sources":["C:/Users/coffe/Documents/GitHub/GST_appweb/src/MongoCon.js"],"names":["MongoClient","require","config","USER","encodeURIComponent","dbUser","PASSWORD","dbPassword","DB_NAME","dbName","MONGO_URI","dbHost","dbPort","MongoLib","constructor","client","useNewUrlParser","connect","newPromise","resolve","reject","error","console","log","db","getAll","collection","query","then","find","toArray","module","exports"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAkBC,OAAO,CAAC,SAAD,CAA/B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAaD,OAAO,CAAC,WAAD,CAA1B;;AAEA,MAAME,IAAI,GAAGC,kBAAkB,CAACF,MAAM,CAACG,MAAR,CAA/B;AACA,MAAMC,QAAQ,GAAGF,kBAAkB,CAACF,MAAM,CAACK,UAAR,CAAnC;AACA,MAAMC,OAAO,GAAGN,MAAM,CAACO,MAAvB;AAEA,MAAMC,SAAS,GAAI,aAAYP,IAAK,IAAGG,QAAS,IAAGJ,MAAM,CAACS,MAAO,IAAGT,MAAM,CAACU,MAAO,gBAAeJ,OAAQ,EAAzG,C,CAA4G;;AAE5G,MAAMK,QAAN,CAAc;AACVC,EAAAA,WAAW,GAAG;AACV,SAAKC,MAAL,GAAc,IAAIf,WAAJ,CAAgBU,SAAhB,EAA2B;AAAEM,MAAAA,eAAe,EAAE;AAAnB,KAA3B,CAAd;AACA,SAAKP,MAAL,GAAcD,OAAd;AACH;;AAEDS,EAAAA,OAAO,GAAG;AACN,WAAOC,UAAU,CAAC,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACnC,WAAKL,MAAL,CAAYE,OAAZ,CAAoBI,KAAK,IAAI;AACzB,YAAIA,KAAJ,EAAW;AACPD,UAAAA,MAAM,CAACC,KAAD,CAAN;AACH;;AAEDC,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACAJ,QAAAA,OAAO,CAAC,KAAKJ,MAAL,CAAYS,EAAZ,CAAe,KAAKf,MAApB,CAAD,CAAP;AACH,OAPD;AAQH,KATgB,CAAjB;AAUH;;AAEDgB,EAAAA,MAAM,CAACC,UAAD,EAAaC,KAAb,EAAoB;AACtB,WAAO,KAAKV,OAAL,GAAeW,IAAf,CAAoBJ,EAAE,IAAI;AAC7B,aAAOA,EAAE,CACJE,UADE,CACSA,UADT,EAEFG,IAFE,CAEGF,KAFH,EAGFG,OAHE,EAAP;AAIH,KALM,CAAP;AAMH;;AA1BS;;AA6BdC,MAAM,CAACC,OAAP,GAAiBnB,QAAjB","sourcesContent":["const { MongoClient } = require(\"mongodb\");\r\nconst { config } = require(\"../config\");\r\n\r\nconst USER = encodeURIComponent(config.dbUser);\r\nconst PASSWORD = encodeURIComponent(config.dbPassword);\r\nconst DB_NAME = config.dbName;\r\n\r\nconst MONGO_URI = `mongodb://${USER}:${PASSWORD}@${config.dbHost}:${config.dbPort}/?authSource=${DB_NAME}`; // prettier-ignore\r\n\r\nclass MongoLib{\r\n    constructor() {\r\n        this.client = new MongoClient(MONGO_URI, { useNewUrlParser: true });\r\n        this.dbName = DB_NAME;\r\n    }\r\n\r\n    connect() {\r\n        return newPromise((resolve, reject) => {\r\n            this.client.connect(error => {\r\n                if (error) {\r\n                    reject(error);\r\n                }\r\n\r\n                console.log(\"Connected succesfully to mongo\");\r\n                resolve(this.client.db(this.dbName));\r\n            });\r\n        });\r\n    }\r\n\r\n    getAll(collection, query) {\r\n        return this.connect().then(db => {\r\n            return db\r\n                .collection(collection)\r\n                .find(query)\r\n                .toArray();\r\n        });\r\n    }\r\n}\r\n\r\nmodule.exports = MongoLib;"]},"metadata":{},"sourceType":"module"}